@* _Layout.cshtml *@
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Quizlet Clone</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <style>
        body {
            background-color: #f8f9fa;
        }

        /* ===== Sidebar ===== */
        .sidebar {
            width: 220px;
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            background-color: #fff;
            border-right: 1px solid #ddd;
            padding-top: 70px;
        }

            .sidebar a {
                display: block;
                padding: 12px 20px;
                color: #333;
                text-decoration: none;
                font-weight: 500;
            }

                .sidebar a:hover,
                .sidebar a.active {
                    background-color: #e9f2ff;
                    color: #0d6efd;
                }

        /* ===== Header ===== */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            height: 60px;
            background-color: white;
            border-bottom: 1px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            z-index: 10;
        }

            .header .logo {
                display: flex;
                align-items: center;
                gap: 8px;
            }

                .header .logo img {
                    height: 28px;
                }

            .header .search-box {
                flex: 1;
                max-width: 400px;
                margin: 0 20px;
            }

            .header input[type="text"] {
                width: 100%;
                border: 1px solid #ccc;
                border-radius: 20px;
                padding: 6px 14px;
            }

        /* ===== Main content ===== */
        .main-content {
            margin-left: 220px;
            margin-top: 70px;
            padding: 20px;
        }

        .avatar {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: #0d6efd;
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 16px;
        }

        .dropdown-menu {
            font-size: 0.95rem;
        }

        .dropdown-item:hover {
            background-color: #f2f4ff;
        }
    </style>
</head>
<body>

    <header class="header">
        <div class="logo">
            <a asp-page="/Index" class="text-decoration-none">
                <img src="https://upload.wikimedia.org/wikipedia/commons/5/59/Quizlet_logo_2020.svg" />
                <span class="fw-bold text-primary">Quizlet Clone</span>
            </a>
        </div>

        <div class="search-box">
            <form method="get" asp-page="/Search">
                <input type="text" name="search" placeholder="Search flashcards..." />
            </form>
        </div>

        <div class="d-flex align-items-center gap-2 user-controls">
            <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#loginModal">Login</button>
            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#registerModal">Register</button>
        </div>
    </header>

    <aside class="sidebar">
        <a asp-page="/Index" class="@(ViewData["Title"]?.ToString() == "Home" ? "active" : "")">🏠 Home</a>
        <a asp-page="/Sets/MySets">📚 My Sets</a>
        <a asp-page="/Sets/Create">➕ Create New</a>
    </aside>

    <main class="main-content">
        @RenderBody()
    </main>

    <div class="modal fade" id="loginModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title">Login</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="loginForm">
                        <div class="mb-3">
                            <label>Email</label>
                            <input type="email" id="loginEmail" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label>Password</label>
                            <input type="password" id="loginPassword" class="form-control" required />
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="registerModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Register</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="registerForm">
                        <div class="mb-3">
                            <label>Full Name</label>
                            <input type="text" id="regName" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label>Email</label>
                            <input type="email" id="regEmail" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label>Password</label>
                            <input type="password" id="regPassword" class="form-control" required />
                        </div>
                        <div class="text-end">
                            <button type="submit" class="btn btn-success">Register</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const API_URL = "https://localhost:7225/api";

        document.getElementById("loginForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const data = {
                username: document.getElementById("loginEmail").value,
                password: document.getElementById("loginPassword").value
            };

            const res = await fetch(`${API_URL}users/login`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });

            if (res.ok) {
                const result = await res.json();
                localStorage.setItem("token", result.token);
                localStorage.setItem("user", JSON.stringify(result.user));
                showAlert("Login successful!", "success");

                const modal = bootstrap.Modal.getInstance(document.getElementById("loginModal"));
                modal.hide();
                renderUserUI();
            } else {
                showAlert("Invalid email or password!", "error");
            }
        });

        document.getElementById("registerForm").addEventListener("submit", async (e) => {
            e.preventDefault();

            const data = {
                fullName: document.getElementById("regName").value,
                email: document.getElementById("regEmail").value,
                password: document.getElementById("regPassword").value
            };

            const res = await fetch(`${API_URL}users/register`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(data)
            });

            if (res.ok) {
                showAlert("Register successful! Please login.", "success");
                const modal = bootstrap.Modal.getInstance(document.getElementById("registerModal"));
                modal.hide();
            } else {
                const err = await res.text();
                showAlert(err, "error");
            }
        });

        function renderUserUI() {
            const headerButtons = document.querySelector(".user-controls");
            const userData = localStorage.getItem("user");

            if (userData) {
                const user = JSON.parse(userData);
                const firstLetter = user.fullName?.charAt(0).toUpperCase() || "U";

                headerButtons.innerHTML = `
                    <div class="dropdown">
                        <button class="btn btn-light d-flex align-items-center gap-2 dropdown-toggle"
                                type="button" id="userMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            <div class="avatar">${firstLetter}</div>
                            <span class="fw-semibold">${user.fullName}</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="userMenuButton">
                            <li><a class="dropdown-item" href="/Profile">👤 My Profile</a></li>
                            <li><a class="dropdown-item" href="/Sets/MySets">📘 My Sets</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="#" id="logoutBtn">🚪 Logout</a></li>
                        </ul>
                    </div>
                `;

                document.getElementById("logoutBtn").addEventListener("click", () => {
                    localStorage.removeItem("token");
                    localStorage.removeItem("user");
                    showAlert("Logged out successfully!", "info");
                    renderUserUI();
                });
            } else {
                headerButtons.innerHTML = `
                    <button class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#loginModal">Login</button>
                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#registerModal">Register</button>
                `;
            }
        }

        function showAlert(message, type = "success") {
            Swal.fire({
                toast: true,
                position: "top-end",
                icon: type,
                title: message,
                showConfirmButton: false,
                timer: 1000,
                timerProgressBar: true
            });
        }

        document.addEventListener("DOMContentLoaded", renderUserUI);
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
